<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE com.htsc.alluxioproxy.sql.mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-com.htsc.alluxioproxy.sql.mapper.dtd">
<com.htsc.alluxioproxy.sql.mapper namespace="com.htsc.alluxioproxy.sql.com.htsc.alluxioproxy.sql.mapper.FileInfoMapper">
    <!-- 自定义返回结果集 -->
    <resultMap id="FileInfoMap" type="com.htsc.alluxioproxy.sql.com.htsc.alluxioproxy.sql.bean.FileInfoBean">
        <id property="mFileId" column="fileID" javaType="java.lang.String"></id>
        <result property="mUploadDate" column="uploadDate" javaType="java.sql.Timestamp"></result>
        <result property="mToTranscode" column="toTranscode" javaType="boolean"></result>
        <result property="mIsTranscode" column="isTranscoded" javaType="boolean"></result>
        <result property="mTranscodeFormat" column="transcodeFormat" javaType="java.lang.String"></result>
        <result property="mIsArchive" column="isArchive" javaType="boolean"></result>
        <result property="mIsMove" column="isMove" javaType="boolean"></result>
    </resultMap>
    <!-- 在各种标签中的id属性必须和接口中的方法名相同 ， id属性值必须是唯一的，不能够重复使用。parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型-->
    <!-- useGeneratedKeys：（ 仅 对 insert 有 用 ） 这 会 告 诉 MyBatis 使 用 JDBC 的getGeneratedKeys
                方法来取出由数据（比如：像 MySQL 和 SQLServer 这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： false。 -->
    <!--keyProperty： （仅对 insert有用）标记一个属性， MyBatis 会通过 getGeneratedKeys或者通过 insert 语句的 selectKey 子元素设置它的值。默认：不设置。 -->
    <!--#{}中的内容，为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值  -->


    <insert id="insertFileInfo">
        insert into fileinfo (fileID,uploadDate,toTranscode,isTranscoded,transcodeFormat,isArchive, isMove)
        values (#{mFileId},#{mUploadDate},#{mToTranscode},#{mIsTranscode},#{mTranscodeFormat},#{mIsArchive},#{mIsMove})
    </insert>

    <update id="updateFileInfo" >
        update fileinfo
        set uploadDate=#{FileInfo.mUploadDate},toTranscode=#{FileInfo.mToTranscode}, isTranscoded=#{FileInfo.mIsTranscode},transcodeFormat=#{FileInfo.mTranscodeFormat}, isArchive=#{FileInfo.mIsArchive},isMove=#{FileInfo.mIsMove}
        where fileID=#{id}
    </update>

    <select id="selectFileInfoById" parameterType="java.lang.String" resultMap="FileInfoMap">
        select * from fileinfo where fileID=#{id}
    </select>

    <update id="updateTranscodeInfo">
        update fileinfo
        set isTranscoded=1
        where fileID=#{id}
    </update>

    <update id="updateArchiveInfo">
        update fileinfo
        set isArchive=1
        where fileID=#{id}
    </update>

    <update id="updateMoveInfo">
        update fileinfo
        set isMove=1
        where fileID=#{id}
    </update>
    <update id="updateUnArchiveInfo" >
        update fileinfo
        set isArchive=0
        where fileID=#{id}
    </update>

    <select id="selectUnarchivedFile" resultType="int">
        select count(*) from fileinfo
        where isArchive = 0 and uploadDate between #{begin} and #{end}
    </select>

    <select id="getArchivedFileNum">
        select count(*) from fileinfo
        where isArchive = 1
    </select>

    <update id="createNewTable" >
        create table fileinfo(
        fileID VARCHAR(255),
        uploadDate TIMESTAMP,
        toTranscode TINYINT,
        isTranscoded TINYINT,
        transcodeFormat VARCHAR(255),
        isArchive TINYINT,
        isMove TINYINT
        );
    </update>


</com.htsc.alluxioproxy.sql.mapper>